name: Create Release from Changelog

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (optional, e.g. 1.1.8). If empty, parsed from plugin.yml'
        required: false
        type: string

  push:
    branches: [ "main" ]
    paths:
      - "CHANGELOG.md"
      - "src/main/resources/plugin.yml"

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # need tags

      - name: Determine version
        id: ver
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            if [ ! -f src/main/resources/plugin.yml ]; then
              echo "plugin.yml not found at src/main/resources/plugin.yml"; exit 1
            fi
            VERSION=$(grep -E '^version:' -m1 src/main/resources/plugin.yml | sed 's/version:[[:space:]]*//')
          fi

          if [ -z "$VERSION" ]; then
            echo "Could not determine version"; exit 1
          fi

          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Resolved version: $VERSION"

      - name: Generate release notes from CHANGELOG.md
        id: notes
        run: |
          if [ ! -f CHANGELOG.md ]; then
            echo "CHANGELOG.md not found"; exit 1
          fi

          awk -v ver="${{ env.VERSION }}" '
            $0 ~ "^## \\[" ver "\\]" {flag=1; next}
            /^## \\[/ && flag {exit}
            flag {print}
          ' CHANGELOG.md > RELEASE_NOTES.md

          if [ ! -s RELEASE_NOTES.md ]; then
            echo "Release notes for ${{ env.VERSION }} not found in CHANGELOG.md." > RELEASE_NOTES.md
            echo "" >> RELEASE_NOTES.md
            echo "_(Add a section like \`## [${{ env.VERSION }}] - YYYY-MM-DD\` to CHANGELOG.md.)_" >> RELEASE_NOTES.md
          fi

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      - name: Build with Maven
        run: mvn -B -DskipTests package

      - name: Create tag if needed
        run: |
          TAG="v${{ env.VERSION }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists."
          else
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git tag "$TAG"
            git push origin "$TAG"
          fi

      - name: Create / Update GitHub Release (notes only first)
        id: ghrel
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: ProShield v${{ env.VERSION }}
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false

      - name: Attach JAR(s) to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          files: |
            target/*.jar
